
                        %'GET'
                        :: board ((q:(need (need (on-peek:ag /x/dbug/state))))) -.+.game
                        :: reminder: peek produces a unit unit cage.
                        ~&  on-save:ag
                        :_  this  (make-200 rid (frontpage bol !<(state on-save:ag))) 
                    == ::End ?+ and End arm
                    
                    
                    
                    
                            %+  turn  ourrow
          |=  q=tokentype  
          ;div.whitesquare: {<q>}

          
                grid-template-columns: repeat(3, 500px);
      grid-template-rows: repeat(3, 250px);


    ;*  ?~  gboard  !!
        %+  turn  gboard  
          |=  row=boardrow
            ;div.board
              ;*  ?~  row  !!
                %+  turn  row
                  |=  q=tokentype  
                    =/  symbol  
                      ?-  q
                        %o  "тнШ"
                        %e  "_"
                        %x  "тип"
                      ==
                    ;div.whitesquare: {symbol}
            ==  ::div board row
    ==  :: p



++  make-keys 
  |=  [rmax=@ud cmax=@ud]
    ^-  (list (list coord))
    =/  row  0
    = 


    ;p
      ;*  =/  nums=(list coord)  (get-row 1 3)
      %+  turn  nums
          |=  n=coord
          ;div.whitesquare:  {n}


++  get-row
  |=  [row=@ud cmax=@ud]
    ^-  (list coord)
      =/  col  0
      =/  result  `(list coord)`~
      |- 
      ^-  (list coord)
       ?:  (lth col cmax)
         %=  $
            result  (snoc result [row col])
            col  +(col)
          ==
          result



;div.whitesquare: {symbol}


        ?+  -.act  `this
            ::Make a new game, or reset the game.
            %newgame
                ~&  "TTT has received a newgame poke."
                :: Manually form our board cell.
                =/  ntn  
                    :*
                        [[r=0 c=0] m=%e] 
                        [[r=0 c=1] m=%e]
                        [[r=0 c=2] m=%e]
                        [[r=1 c=0] m=%e] 
                        [[r=1 c=1] m=%e]
                        [[r=1 c=2] m=%e]
                        [[r=2 c=0] m=%e] 
                        [[r=2 c=1] m=%e]
                        [[r=2 c=2] m=%e]
                    ~
                ==
                ::  Our [state card] cell
                :_  
                    %=  
                        this  bsize  
                        [r=3 c=3]  
                        board  (my ntn)  
                        moves  0  
                        currplayer  %p1x  
                    status  %cont    
                ==  
            ~  :: End of %newgame case.
            %printstate
                ~&  'Board='  ~&  board
                ~&  'Dims='  ~&  bsize
                ~&  'currplayer='  ~&  currplayer
                ~&  'moves'  ~&  moves
                ~&  'status'  ~&  status
                `this
            %teststate
                =/  ntn  
                        :*
                            [[r=0 c=0] m=%o] 
                            [[r=0 c=1] m=%x]
                            [[r=0 c=2] m=%e]
                            [[r=1 c=0] m=%o] 
                            [[r=1 c=1] m=%x]
                            [[r=1 c=2] m=%x]
                            [[r=2 c=0] m=%o] 
                            [[r=2 c=1] m=%e]
                            [[r=2 c=2] m=%e]
                            ~
                        ==
                :_  
                    %=  
                    this  
                    bsize  [r=3 c=3]  
                    board  (my ntn)  
                    moves  6  
                    currplayer  %p1x  
                    status  %cont  
                ==  
            ~
            ::  End of %teststate case.
            %move  
            :_  
                %=  this  
                    board  (~(put by board) [[r.act c.act] [ttype.act]])  
                    moves  +(moves)  
                ==  
            ~
            ::End of %move case
            %testfe
            :_  
                %=  this  
                    currplayer  current.act  
                    status  stat.act  
                ==  
            ~
            ::  End of %testfe case.
        ==  ::  End of ?+



    body {
      background-color:black;
      color: orange;
    }
    h1 {
      font-size: 36pt;
      text-align: center;
    }
    h2 {
      font-size: 24pt;
      text-align: center;
    }
    div  {  
      font-size: 16pt;
    }

    .contain {
      position:relative;
      left:20%;
    }

    .statuscontainer {
      width: 80%;
      margin: 0 auto; 
      display: flex;
    }

    .player {
      flex: 1; 
      text-align: center;
      font-size: 24pt;
      padding: 10px;
      border: 1px solid #000; 
    }
    .active {
      background-color: orange;
      color: black;
    }
    .waiting {
      background-color: black;
      color: orange;
    }
    .master  {
      background-color: green;
      color: white;
    }
    .slave {
      background-color: red;
      color: white;
    }
    .limbo {
      background-color: gray;
      color: white;
    }
    .board {
      margin-top: 5px;
      display: grid;
      grid-template-columns: repeat(3, 500px);
      column-gap: 5px;
    }
    .square {
      width: 500px;
      height: 250px;
      background-color: orange;
      color: blue;
      font-size: 72px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
    }



      |=  [=wire =sign-arvo]
        ^-  (quip card _this)
        ?.  ?=([%bind ~] wire)
          (on-arvo:def [wire sign-arvo])
        ?.  ?=([%eyre %bound *] sign-arvo)
          (on-arvo:def [wire sign-arvo])
        ~?  !accepted.sign-arvo
          %eyre-rejected-squad-binding
        `this


        ;div.sigdiv:  "{<tiles.mstate>}"


    ^-  tape
    ~&  csscell
      %+  weld 
        "
        body {
          background-color:black;
          color:orange;
          text-align: center;
        }
        h1 {
          font-size: 36pt;
        }
        h2 {
          font-size: 24pt;
        }
        div  {  
          font-size: 16pt;
        }
        .start {
          width: 50%;
          height: 20%;
          background-color: orange;
          color: black;
          text-align: center;
          line-height: 20vh; 
          font-size: 14pt;
          margin: 0 auto; 
          display: block;
        }
        .contain {
          position:relative;
          left:20%;
        }
        .board {
          margin-top: 5px;
          display: grid;
          grid-template-columns: repeat(
        "
        %+  weld 
        %-  trip
        '''
          {<col-num.csscell>}, {<cell-width.csscell>});
          column-gap: 5px;
        }
        .square {
        '''
        %+  weld 
        %-  trip
        '''
          width: {<cell-width.csscell>};
          height: {<cell-width.csscell>};
        '''
        %-  trip
        '''
          background-color: orange;
          color: blue;
          font-size: 48px;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: bold;
        }
        '''


      position:relative;
      left:20%;


      display: grid;
      grid-template-columns: repeat(3, 200px);
      margin-top: 5px;
      column-gap: 5px;


      width: 50px;
      height: 200px;
      background-color: orange;
      color: blue;
      font-size: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;

[%pass /pokes %agent [our.bowl %mines] %poke %mines-action !>(`action`[%check-win ~])]